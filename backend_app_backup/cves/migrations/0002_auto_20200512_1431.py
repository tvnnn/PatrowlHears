# Generated by Django 3.0.6 on 2020-05-12 14:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cves', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='historicalvendor',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalproductversion',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalproductversion',
            name='product',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cves.Product'),
        ),
        migrations.AddField(
            model_name='historicalproduct',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalproduct',
            name='vendor',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cves.Vendor'),
        ),
        migrations.AddField(
            model_name='historicalcpe',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalcpe',
            name='product',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cves.Product'),
        ),
        migrations.AddField(
            model_name='historicalcpe',
            name='vendor',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cves.Vendor'),
        ),
        migrations.AddField(
            model_name='historicalbulletin',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cve',
            name='bulletins',
            field=models.ManyToManyField(blank=True, to='cves.Bulletin'),
        ),
        migrations.AddField(
            model_name='cve',
            name='cwe',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cves.CWE'),
        ),
        migrations.AddField(
            model_name='cve',
            name='products',
            field=models.ManyToManyField(related_name='cves', to='cves.Product'),
        ),
        migrations.AddField(
            model_name='cve',
            name='productversions',
            field=models.ManyToManyField(related_name='cves', to='cves.ProductVersion'),
        ),
        migrations.AddField(
            model_name='cpe',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cves.Product'),
        ),
        migrations.AddField(
            model_name='cpe',
            name='vendor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cves.Vendor'),
        ),
        migrations.AlterUniqueTogether(
            name='productversion',
            unique_together={('version', 'vector', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('name', 'vendor')},
        ),
    ]
