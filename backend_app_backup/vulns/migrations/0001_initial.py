# Generated by Django 3.0.6 on 2020-05-12 14:31

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models
import vulns.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0003_field_fix_and_editable'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cves', '0002_auto_20200512_1431'),
    ]

    operations = [
        migrations.CreateModel(
            name='Vuln',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cveid', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('summary', models.TextField(default='')),
                ('published', models.DateTimeField(null=True)),
                ('modified', models.DateTimeField(null=True)),
                ('assigner', models.CharField(max_length=50, null=True)),
                ('vulnerable_products', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=250), null=True, size=None)),
                ('cvss', models.FloatField(default=0.0, null=True)),
                ('cvss_time', models.DateTimeField(null=True)),
                ('cvss_vector', models.CharField(max_length=250, null=True)),
                ('access', django.contrib.postgres.fields.jsonb.JSONField(default=vulns.models.access_default_dict)),
                ('impact', django.contrib.postgres.fields.jsonb.JSONField(default=vulns.models.impact_default_dict)),
                ('score', models.IntegerField(default=0)),
                ('is_exploitable', models.BooleanField(default=False)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('is_in_the_news', models.BooleanField(default=False)),
                ('is_in_the_wild', models.BooleanField(default=False)),
                ('reflinks', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('reflinkids', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('cve', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cves.CVE')),
                ('cwe', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cves.CWE')),
                ('products', models.ManyToManyField(related_name='vulns', to='cves.Product')),
                ('productversions', models.ManyToManyField(related_name='vulns', to='cves.ProductVersion')),
            ],
            options={
                'db_table': 'vulns',
            },
        ),
        migrations.CreateModel(
            name='ThreatMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(blank=True, default='', max_length=1500)),
                ('notes', models.TextField(default='')),
                ('trust_level', models.CharField(choices=[('unknown', 'Unknown'), ('low', 'Low'), ('medium', 'Medium'), ('trusted', 'High')], default='unknown', max_length=20)),
                ('tlp_level', models.CharField(choices=[('white', 'White'), ('green', 'Green'), ('amber', 'Amber'), ('red', 'Red'), ('black', 'Black')], default='red', max_length=20)),
                ('source', models.CharField(max_length=250, null=True)),
                ('is_in_the_wild', models.BooleanField(default=False)),
                ('is_in_the_news', models.BooleanField(default=False)),
                ('raw', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('vuln', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vulns.Vuln')),
            ],
            options={
                'db_table': 'threats_metadata',
            },
        ),
        migrations.CreateModel(
            name='OrgThreatMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(blank=True, default='', max_length=1500)),
                ('notes', models.TextField(default='')),
                ('trust_level', models.CharField(choices=[('unknown', 'Unknown'), ('low', 'Low'), ('medium', 'Medium'), ('trusted', 'High')], default='unknown', max_length=20)),
                ('tlp_level', models.CharField(choices=[('white', 'White'), ('green', 'Green'), ('amber', 'Amber'), ('red', 'Red'), ('black', 'Black')], default='red', max_length=20)),
                ('source', models.CharField(max_length=250, null=True)),
                ('is_in_the_wild', models.BooleanField(default=False)),
                ('is_in_the_news', models.BooleanField(default=False)),
                ('raw', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='org_threats', to='organizations.Organization')),
                ('vuln', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vulns.Vuln')),
            ],
            options={
                'verbose_name': 'Org threats new',
                'verbose_name_plural': 'Org threats news',
                'db_table': 'org_threats_metadata',
            },
        ),
        migrations.CreateModel(
            name='OrgExploitMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publicid', models.CharField(default='n/a', max_length=250)),
                ('link', models.CharField(blank=True, default='', max_length=1500)),
                ('notes', models.TextField(default='')),
                ('trust_level', models.CharField(choices=[('unknown', 'Unknown'), ('low', 'Low'), ('medium', 'Medium'), ('trusted', 'High')], default='unknown', max_length=20)),
                ('tlp_level', models.CharField(choices=[('white', 'White'), ('green', 'Green'), ('amber', 'Amber'), ('red', 'Red'), ('black', 'Black')], default='red', max_length=20)),
                ('source', models.CharField(max_length=250, null=True)),
                ('availability', models.CharField(choices=[('unknown', 'No known exploit available'), ('private', 'A private exploit is available'), ('public', 'A public exploit is available')], default='unknown', max_length=20)),
                ('type', models.CharField(choices=[('unknown', 'Unknown'), ('discovery', 'Discovery'), ('exploitation', 'Exploitation')], default='unknown', max_length=20)),
                ('maturity', models.CharField(choices=[('unknown', 'Unknown'), ('unproven', 'Unproven'), ('poc', 'PoC'), ('functional', 'Functional Exploit')], default='unknown', max_length=20)),
                ('raw', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('hash', models.BigIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='org_exploits', to='organizations.Organization')),
                ('vuln', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vulns.Vuln')),
            ],
            options={
                'verbose_name': 'Org exploit',
                'verbose_name_plural': 'Org exploits',
                'db_table': 'org_exploits_metadata',
            },
        ),
        migrations.CreateModel(
            name='HistoricalVuln',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('cveid', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('summary', models.TextField(default='')),
                ('published', models.DateTimeField(null=True)),
                ('modified', models.DateTimeField(null=True)),
                ('assigner', models.CharField(max_length=50, null=True)),
                ('vulnerable_products', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=250), null=True, size=None)),
                ('cvss', models.FloatField(default=0.0, null=True)),
                ('cvss_time', models.DateTimeField(null=True)),
                ('cvss_vector', models.CharField(max_length=250, null=True)),
                ('access', django.contrib.postgres.fields.jsonb.JSONField(default=vulns.models.access_default_dict)),
                ('impact', django.contrib.postgres.fields.jsonb.JSONField(default=vulns.models.impact_default_dict)),
                ('score', models.IntegerField(default=0)),
                ('is_exploitable', models.BooleanField(default=False)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('is_in_the_news', models.BooleanField(default=False)),
                ('is_in_the_wild', models.BooleanField(default=False)),
                ('reflinks', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('reflinkids', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cve', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cves.CVE')),
                ('cwe', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='cves.CWE')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical vuln',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalThreatMetadata',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('link', models.CharField(blank=True, default='', max_length=1500)),
                ('notes', models.TextField(default='')),
                ('trust_level', models.CharField(choices=[('unknown', 'Unknown'), ('low', 'Low'), ('medium', 'Medium'), ('trusted', 'High')], default='unknown', max_length=20)),
                ('tlp_level', models.CharField(choices=[('white', 'White'), ('green', 'Green'), ('amber', 'Amber'), ('red', 'Red'), ('black', 'Black')], default='red', max_length=20)),
                ('source', models.CharField(max_length=250, null=True)),
                ('is_in_the_wild', models.BooleanField(default=False)),
                ('is_in_the_news', models.BooleanField(default=False)),
                ('raw', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('vuln', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='vulns.Vuln')),
            ],
            options={
                'verbose_name': 'historical threat metadata',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrgThreatMetadata',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('link', models.CharField(blank=True, default='', max_length=1500)),
                ('notes', models.TextField(default='')),
                ('trust_level', models.CharField(choices=[('unknown', 'Unknown'), ('low', 'Low'), ('medium', 'Medium'), ('trusted', 'High')], default='unknown', max_length=20)),
                ('tlp_level', models.CharField(choices=[('white', 'White'), ('green', 'Green'), ('amber', 'Amber'), ('red', 'Red'), ('black', 'Black')], default='red', max_length=20)),
                ('source', models.CharField(max_length=250, null=True)),
                ('is_in_the_wild', models.BooleanField(default=False)),
                ('is_in_the_news', models.BooleanField(default=False)),
                ('raw', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.Organization')),
                ('vuln', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='vulns.Vuln')),
            ],
            options={
                'verbose_name': 'historical Org threats new',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrgExploitMetadata',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('publicid', models.CharField(default='n/a', max_length=250)),
                ('link', models.CharField(blank=True, default='', max_length=1500)),
                ('notes', models.TextField(default='')),
                ('trust_level', models.CharField(choices=[('unknown', 'Unknown'), ('low', 'Low'), ('medium', 'Medium'), ('trusted', 'High')], default='unknown', max_length=20)),
                ('tlp_level', models.CharField(choices=[('white', 'White'), ('green', 'Green'), ('amber', 'Amber'), ('red', 'Red'), ('black', 'Black')], default='red', max_length=20)),
                ('source', models.CharField(max_length=250, null=True)),
                ('availability', models.CharField(choices=[('unknown', 'No known exploit available'), ('private', 'A private exploit is available'), ('public', 'A public exploit is available')], default='unknown', max_length=20)),
                ('type', models.CharField(choices=[('unknown', 'Unknown'), ('discovery', 'Discovery'), ('exploitation', 'Exploitation')], default='unknown', max_length=20)),
                ('maturity', models.CharField(choices=[('unknown', 'Unknown'), ('unproven', 'Unproven'), ('poc', 'PoC'), ('functional', 'Functional Exploit')], default='unknown', max_length=20)),
                ('raw', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('hash', models.BigIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organizations.Organization')),
                ('vuln', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='vulns.Vuln')),
            ],
            options={
                'verbose_name': 'historical Org exploit',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalExploitMetadata',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('publicid', models.CharField(default='n/a', max_length=250)),
                ('link', models.CharField(blank=True, default='', max_length=1500)),
                ('notes', models.TextField(default='')),
                ('trust_level', models.CharField(choices=[('unknown', 'Unknown'), ('low', 'Low'), ('medium', 'Medium'), ('trusted', 'High')], default='unknown', max_length=20)),
                ('tlp_level', models.CharField(choices=[('white', 'White'), ('green', 'Green'), ('amber', 'Amber'), ('red', 'Red'), ('black', 'Black')], default='red', max_length=20)),
                ('source', models.CharField(max_length=250, null=True)),
                ('availability', models.CharField(choices=[('unknown', 'No known exploit available'), ('private', 'A private exploit is available'), ('public', 'A public exploit is available')], default='unknown', max_length=20)),
                ('type', models.CharField(choices=[('unknown', 'Unknown'), ('discovery', 'Discovery'), ('exploitation', 'Exploitation')], default='unknown', max_length=20)),
                ('maturity', models.CharField(choices=[('unknown', 'Unknown'), ('unproven', 'Unproven'), ('poc', 'PoC'), ('functional', 'Functional Exploit')], default='unknown', max_length=20)),
                ('raw', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('hash', models.BigIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('vuln', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='vulns.Vuln')),
            ],
            options={
                'verbose_name': 'historical exploit metadata',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ExploitMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publicid', models.CharField(default='n/a', max_length=250)),
                ('link', models.CharField(blank=True, default='', max_length=1500)),
                ('notes', models.TextField(default='')),
                ('trust_level', models.CharField(choices=[('unknown', 'Unknown'), ('low', 'Low'), ('medium', 'Medium'), ('trusted', 'High')], default='unknown', max_length=20)),
                ('tlp_level', models.CharField(choices=[('white', 'White'), ('green', 'Green'), ('amber', 'Amber'), ('red', 'Red'), ('black', 'Black')], default='red', max_length=20)),
                ('source', models.CharField(max_length=250, null=True)),
                ('availability', models.CharField(choices=[('unknown', 'No known exploit available'), ('private', 'A private exploit is available'), ('public', 'A public exploit is available')], default='unknown', max_length=20)),
                ('type', models.CharField(choices=[('unknown', 'Unknown'), ('discovery', 'Discovery'), ('exploitation', 'Exploitation')], default='unknown', max_length=20)),
                ('maturity', models.CharField(choices=[('unknown', 'Unknown'), ('unproven', 'Unproven'), ('poc', 'PoC'), ('functional', 'Functional Exploit')], default='unknown', max_length=20)),
                ('raw', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('published', models.DateTimeField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
                ('hash', models.BigIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('vuln', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vulns.Vuln')),
            ],
            options={
                'db_table': 'exploits_metadata',
            },
        ),
    ]
